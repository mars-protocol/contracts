{
  "contract_name": "mars-rewards-collector",
  "contract_version": "1.1.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "required": [
      "address_provider",
      "channel_id",
      "fee_collector_denom",
      "owner",
      "safety_fund_denom",
      "safety_tax_rate",
      "slippage_tolerance",
      "timeout_seconds"
    ],
    "properties": {
      "address_provider": {
        "description": "Address provider returns addresses for all protocol contracts",
        "type": "string"
      },
      "channel_id": {
        "description": "The channel ID of the mars hub",
        "type": "string"
      },
      "fee_collector_denom": {
        "description": "The asset to which the fee collector share is converted",
        "type": "string"
      },
      "owner": {
        "description": "The contract's owner",
        "type": "string"
      },
      "safety_fund_denom": {
        "description": "The asset to which the safety fund share is converted",
        "type": "string"
      },
      "safety_tax_rate": {
        "description": "Percentage of fees that are sent to the safety fund",
        "allOf": [
          {
            "$ref": "#/definitions/Decimal"
          }
        ]
      },
      "slippage_tolerance": {
        "description": "Maximum percentage of price movement (minimum amount you accept to receive during swap)",
        "allOf": [
          {
            "$ref": "#/definitions/Decimal"
          }
        ]
      },
      "timeout_seconds": {
        "description": "Number of seconds after which an IBC transfer is to be considered failed, if no acknowledgement is received",
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0
      }
    },
    "additionalProperties": false,
    "definitions": {
      "Decimal": {
        "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
        "type": "string"
      }
    }
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "description": "Manages admin role state",
        "type": "object",
        "required": [
          "update_owner"
        ],
        "properties": {
          "update_owner": {
            "$ref": "#/definitions/OwnerUpdate"
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Update contract config",
        "type": "object",
        "required": [
          "update_config"
        ],
        "properties": {
          "update_config": {
            "type": "object",
            "required": [
              "new_cfg"
            ],
            "properties": {
              "new_cfg": {
                "$ref": "#/definitions/UpdateConfig"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Withdraw coins from the red bank",
        "type": "object",
        "required": [
          "withdraw_from_red_bank"
        ],
        "properties": {
          "withdraw_from_red_bank": {
            "type": "object",
            "required": [
              "denom"
            ],
            "properties": {
              "amount": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Uint128"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "denom": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Distribute the accrued protocol income between the safety fund and the fee modules on mars hub, according to the split set in config. Callable by any address.",
        "type": "object",
        "required": [
          "distribute_rewards"
        ],
        "properties": {
          "distribute_rewards": {
            "type": "object",
            "required": [
              "denom"
            ],
            "properties": {
              "amount": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Uint128"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "denom": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Swap any asset on the contract",
        "type": "object",
        "required": [
          "swap_asset"
        ],
        "properties": {
          "swap_asset": {
            "type": "object",
            "required": [
              "denom"
            ],
            "properties": {
              "amount": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Uint128"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "denom": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Claim rewards in incentives contract.\n\nWe wanted to leave protocol rewards in the red-bank so they continue to work as liquidity (until the bot invokes WithdrawFromRedBank). As an side effect to this, if the market is incentivised with MARS tokens, the contract will also accrue MARS token incentives.",
        "type": "object",
        "required": [
          "claim_incentive_rewards"
        ],
        "properties": {
          "claim_incentive_rewards": {
            "type": "object",
            "properties": {
              "limit": {
                "description": "The maximum number of results to return. If not set, 5 is used. If larger than 10, 10 is used.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "start_after_collateral_denom": {
                "description": "Start pagination after this collateral denom",
                "type": [
                  "string",
                  "null"
                ]
              },
              "start_after_incentive_denom": {
                "description": "Start pagination after this incentive denom. If supplied you must also supply start_after_collateral_denom.",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "Decimal": {
        "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
        "type": "string"
      },
      "OwnerUpdate": {
        "oneOf": [
          {
            "description": "Proposes a new owner to take role. Only current owner can execute.",
            "type": "object",
            "required": [
              "propose_new_owner"
            ],
            "properties": {
              "propose_new_owner": {
                "type": "object",
                "required": [
                  "proposed"
                ],
                "properties": {
                  "proposed": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Clears the currently proposed owner. Only current owner can execute.",
            "type": "string",
            "enum": [
              "clear_proposed"
            ]
          },
          {
            "description": "Promotes the proposed owner to be the current one. Only the proposed owner can execute.",
            "type": "string",
            "enum": [
              "accept_proposed"
            ]
          },
          {
            "description": "Throws away the keys to the Owner role forever. Once done, no owner can ever be set later.",
            "type": "string",
            "enum": [
              "abolish_owner_role"
            ]
          },
          {
            "description": "A separate entity managed by Owner that can be used for granting specific emergency powers.",
            "type": "object",
            "required": [
              "set_emergency_owner"
            ],
            "properties": {
              "set_emergency_owner": {
                "type": "object",
                "required": [
                  "emergency_owner"
                ],
                "properties": {
                  "emergency_owner": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Remove the entity in the Emergency Owner role",
            "type": "string",
            "enum": [
              "clear_emergency_owner"
            ]
          }
        ]
      },
      "Uint128": {
        "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
        "type": "string"
      },
      "UpdateConfig": {
        "type": "object",
        "properties": {
          "address_provider": {
            "description": "Address provider returns addresses for all protocol contracts",
            "type": [
              "string",
              "null"
            ]
          },
          "channel_id": {
            "description": "The channel id of the mars hub",
            "type": [
              "string",
              "null"
            ]
          },
          "fee_collector_denom": {
            "description": "The asset to which the fee collector share is converted",
            "type": [
              "string",
              "null"
            ]
          },
          "safety_fund_denom": {
            "description": "The asset to which the safety fund share is converted",
            "type": [
              "string",
              "null"
            ]
          },
          "safety_tax_rate": {
            "description": "Percentage of fees that are sent to the safety fund",
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "slippage_tolerance": {
            "description": "Maximum percentage of price movement (minimum amount you accept to receive during swap)",
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "timeout_seconds": {
            "description": "Number of seconds after which an IBC transfer is to be considered failed, if no acknowledgement is received",
            "type": [
              "integer",
              "null"
            ],
            "format": "uint64",
            "minimum": 0.0
          }
        },
        "additionalProperties": false
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "description": "Get config parameters",
        "type": "object",
        "required": [
          "config"
        ],
        "properties": {
          "config": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "migrate": null,
  "sudo": null,
  "responses": {
    "config": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ConfigResponse",
      "type": "object",
      "required": [
        "address_provider",
        "channel_id",
        "fee_collector_denom",
        "safety_fund_denom",
        "safety_tax_rate",
        "slippage_tolerance",
        "timeout_seconds"
      ],
      "properties": {
        "address_provider": {
          "description": "Address provider returns addresses for all protocol contracts",
          "type": "string"
        },
        "channel_id": {
          "description": "The channel ID of the mars hub",
          "type": "string"
        },
        "fee_collector_denom": {
          "description": "The asset to which the fee collector share is converted",
          "type": "string"
        },
        "owner": {
          "description": "The contract's owner",
          "type": [
            "string",
            "null"
          ]
        },
        "proposed_new_owner": {
          "description": "The contract's proposed owner",
          "type": [
            "string",
            "null"
          ]
        },
        "safety_fund_denom": {
          "description": "The asset to which the safety fund share is converted",
          "type": "string"
        },
        "safety_tax_rate": {
          "description": "Percentage of fees that are sent to the safety fund",
          "allOf": [
            {
              "$ref": "#/definitions/Decimal"
            }
          ]
        },
        "slippage_tolerance": {
          "description": "Maximum percentage of price movement (minimum amount you accept to receive during swap)",
          "allOf": [
            {
              "$ref": "#/definitions/Decimal"
            }
          ]
        },
        "timeout_seconds": {
          "description": "Number of seconds after which an IBC transfer is to be considered failed, if no acknowledgement is received",
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Decimal": {
          "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
          "type": "string"
        }
      }
    }
  }
}

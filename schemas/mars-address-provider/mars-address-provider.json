{
  "contract_name": "mars-address-provider",
  "contract_version": "2.1.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "description": "Essentially, mars-address-provider is a required init param for all other contracts, so it needs to be initialised first (Only owner can be set on initialization). So the deployment looks like this:\n\n1. Init the address provider 2. Init all other contracts, passing in the address provider address (not ALL contracts need this but many do) 3. Update the address provider, with an update config call to contain all the other contract addresses from step 2, this is why we need it to be owned by an EOA (externally owned account) - so we can do this update as part of the deployment 4. Update the owner of the address provider contract at the end of deployment to be either a. the multisig or b. the gov/council contract",
    "type": "object",
    "required": [
      "owner",
      "prefix"
    ],
    "properties": {
      "owner": {
        "description": "The contract's owner",
        "type": "string"
      },
      "prefix": {
        "description": "The address prefix of the chain this contract is deployed on",
        "type": "string"
      }
    },
    "additionalProperties": false
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "description": "Set address",
        "type": "object",
        "required": [
          "set_address"
        ],
        "properties": {
          "set_address": {
            "type": "object",
            "required": [
              "address",
              "address_type"
            ],
            "properties": {
              "address": {
                "type": "string"
              },
              "address_type": {
                "$ref": "#/definitions/MarsAddressType"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Manages admin role state",
        "type": "object",
        "required": [
          "update_owner"
        ],
        "properties": {
          "update_owner": {
            "$ref": "#/definitions/OwnerUpdate"
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "MarsAddressType": {
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "incentives",
              "oracle",
              "red_bank",
              "rewards_collector",
              "params",
              "credit_manager"
            ]
          },
          {
            "description": "Protocol admin is an ICS-27 interchain account controlled by Mars Hub's x/gov module. This account will take the owner and admin roles of red-bank contracts.\n\nOwner means the account who can invoke certain priviliged execute methods on a contract, such as updating the config. Admin means the account who can migrate a contract.",
            "type": "string",
            "enum": [
              "protocol_admin"
            ]
          },
          {
            "description": "The `fee_collector` module account controlled by Mars Hub's x/distribution module. Funds sent to this account will be distributed as staking rewards.\n\nNOTE: This is a Mars Hub address with the `mars` bech32 prefix, which may not be recognized by the `api.addr_validate` method.",
            "type": "string",
            "enum": [
              "fee_collector"
            ]
          },
          {
            "description": "The module account controlled by the by Mars Hub's x/safety module. Funds sent to this account will be deposited into the safety fund.\n\nNOTE: This is a Mars Hub address with the `mars` bech32 prefix, which may not be recognized by the `api.addr_validate` method.",
            "type": "string",
            "enum": [
              "safety_fund"
            ]
          },
          {
            "description": "The swapper contract on the chain",
            "type": "string",
            "enum": [
              "swapper"
            ]
          },
          {
            "description": "Astroport incentives contract",
            "type": "string",
            "enum": [
              "astroport_incentives"
            ]
          }
        ]
      },
      "OwnerUpdate": {
        "oneOf": [
          {
            "description": "Proposes a new owner to take role. Only current owner can execute.",
            "type": "object",
            "required": [
              "propose_new_owner"
            ],
            "properties": {
              "propose_new_owner": {
                "type": "object",
                "required": [
                  "proposed"
                ],
                "properties": {
                  "proposed": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Clears the currently proposed owner. Only current owner can execute.",
            "type": "string",
            "enum": [
              "clear_proposed"
            ]
          },
          {
            "description": "Promotes the proposed owner to be the current one. Only the proposed owner can execute.",
            "type": "string",
            "enum": [
              "accept_proposed"
            ]
          },
          {
            "description": "Throws away the keys to the Owner role forever. Once done, no owner can ever be set later.",
            "type": "string",
            "enum": [
              "abolish_owner_role"
            ]
          },
          {
            "description": "A separate entity managed by Owner that can be used for granting specific emergency powers.",
            "type": "object",
            "required": [
              "set_emergency_owner"
            ],
            "properties": {
              "set_emergency_owner": {
                "type": "object",
                "required": [
                  "emergency_owner"
                ],
                "properties": {
                  "emergency_owner": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Remove the entity in the Emergency Owner role",
            "type": "string",
            "enum": [
              "clear_emergency_owner"
            ]
          }
        ]
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "description": "Get config",
        "type": "object",
        "required": [
          "config"
        ],
        "properties": {
          "config": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Get a single address",
        "type": "object",
        "required": [
          "address"
        ],
        "properties": {
          "address": {
            "$ref": "#/definitions/MarsAddressType"
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Get a list of addresses",
        "type": "object",
        "required": [
          "addresses"
        ],
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/MarsAddressType"
            }
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Query all stored addresses with pagination",
        "type": "object",
        "required": [
          "all_addresses"
        ],
        "properties": {
          "all_addresses": {
            "type": "object",
            "properties": {
              "limit": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "start_after": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/MarsAddressType"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "MarsAddressType": {
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "incentives",
              "oracle",
              "red_bank",
              "rewards_collector",
              "params",
              "credit_manager"
            ]
          },
          {
            "description": "Protocol admin is an ICS-27 interchain account controlled by Mars Hub's x/gov module. This account will take the owner and admin roles of red-bank contracts.\n\nOwner means the account who can invoke certain priviliged execute methods on a contract, such as updating the config. Admin means the account who can migrate a contract.",
            "type": "string",
            "enum": [
              "protocol_admin"
            ]
          },
          {
            "description": "The `fee_collector` module account controlled by Mars Hub's x/distribution module. Funds sent to this account will be distributed as staking rewards.\n\nNOTE: This is a Mars Hub address with the `mars` bech32 prefix, which may not be recognized by the `api.addr_validate` method.",
            "type": "string",
            "enum": [
              "fee_collector"
            ]
          },
          {
            "description": "The module account controlled by the by Mars Hub's x/safety module. Funds sent to this account will be deposited into the safety fund.\n\nNOTE: This is a Mars Hub address with the `mars` bech32 prefix, which may not be recognized by the `api.addr_validate` method.",
            "type": "string",
            "enum": [
              "safety_fund"
            ]
          },
          {
            "description": "The swapper contract on the chain",
            "type": "string",
            "enum": [
              "swapper"
            ]
          },
          {
            "description": "Astroport incentives contract",
            "type": "string",
            "enum": [
              "astroport_incentives"
            ]
          }
        ]
      }
    }
  },
  "migrate": null,
  "sudo": null,
  "responses": {
    "address": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AddressResponseItem",
      "type": "object",
      "required": [
        "address",
        "address_type"
      ],
      "properties": {
        "address": {
          "description": "Address value",
          "type": "string"
        },
        "address_type": {
          "description": "The type of address",
          "allOf": [
            {
              "$ref": "#/definitions/MarsAddressType"
            }
          ]
        }
      },
      "additionalProperties": false,
      "definitions": {
        "MarsAddressType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "incentives",
                "oracle",
                "red_bank",
                "rewards_collector",
                "params",
                "credit_manager"
              ]
            },
            {
              "description": "Protocol admin is an ICS-27 interchain account controlled by Mars Hub's x/gov module. This account will take the owner and admin roles of red-bank contracts.\n\nOwner means the account who can invoke certain priviliged execute methods on a contract, such as updating the config. Admin means the account who can migrate a contract.",
              "type": "string",
              "enum": [
                "protocol_admin"
              ]
            },
            {
              "description": "The `fee_collector` module account controlled by Mars Hub's x/distribution module. Funds sent to this account will be distributed as staking rewards.\n\nNOTE: This is a Mars Hub address with the `mars` bech32 prefix, which may not be recognized by the `api.addr_validate` method.",
              "type": "string",
              "enum": [
                "fee_collector"
              ]
            },
            {
              "description": "The module account controlled by the by Mars Hub's x/safety module. Funds sent to this account will be deposited into the safety fund.\n\nNOTE: This is a Mars Hub address with the `mars` bech32 prefix, which may not be recognized by the `api.addr_validate` method.",
              "type": "string",
              "enum": [
                "safety_fund"
              ]
            },
            {
              "description": "The swapper contract on the chain",
              "type": "string",
              "enum": [
                "swapper"
              ]
            },
            {
              "description": "Astroport incentives contract",
              "type": "string",
              "enum": [
                "astroport_incentives"
              ]
            }
          ]
        }
      }
    },
    "addresses": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Array_of_AddressResponseItem",
      "type": "array",
      "items": {
        "$ref": "#/definitions/AddressResponseItem"
      },
      "definitions": {
        "AddressResponseItem": {
          "type": "object",
          "required": [
            "address",
            "address_type"
          ],
          "properties": {
            "address": {
              "description": "Address value",
              "type": "string"
            },
            "address_type": {
              "description": "The type of address",
              "allOf": [
                {
                  "$ref": "#/definitions/MarsAddressType"
                }
              ]
            }
          },
          "additionalProperties": false
        },
        "MarsAddressType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "incentives",
                "oracle",
                "red_bank",
                "rewards_collector",
                "params",
                "credit_manager"
              ]
            },
            {
              "description": "Protocol admin is an ICS-27 interchain account controlled by Mars Hub's x/gov module. This account will take the owner and admin roles of red-bank contracts.\n\nOwner means the account who can invoke certain priviliged execute methods on a contract, such as updating the config. Admin means the account who can migrate a contract.",
              "type": "string",
              "enum": [
                "protocol_admin"
              ]
            },
            {
              "description": "The `fee_collector` module account controlled by Mars Hub's x/distribution module. Funds sent to this account will be distributed as staking rewards.\n\nNOTE: This is a Mars Hub address with the `mars` bech32 prefix, which may not be recognized by the `api.addr_validate` method.",
              "type": "string",
              "enum": [
                "fee_collector"
              ]
            },
            {
              "description": "The module account controlled by the by Mars Hub's x/safety module. Funds sent to this account will be deposited into the safety fund.\n\nNOTE: This is a Mars Hub address with the `mars` bech32 prefix, which may not be recognized by the `api.addr_validate` method.",
              "type": "string",
              "enum": [
                "safety_fund"
              ]
            },
            {
              "description": "The swapper contract on the chain",
              "type": "string",
              "enum": [
                "swapper"
              ]
            },
            {
              "description": "Astroport incentives contract",
              "type": "string",
              "enum": [
                "astroport_incentives"
              ]
            }
          ]
        }
      }
    },
    "all_addresses": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Array_of_AddressResponseItem",
      "type": "array",
      "items": {
        "$ref": "#/definitions/AddressResponseItem"
      },
      "definitions": {
        "AddressResponseItem": {
          "type": "object",
          "required": [
            "address",
            "address_type"
          ],
          "properties": {
            "address": {
              "description": "Address value",
              "type": "string"
            },
            "address_type": {
              "description": "The type of address",
              "allOf": [
                {
                  "$ref": "#/definitions/MarsAddressType"
                }
              ]
            }
          },
          "additionalProperties": false
        },
        "MarsAddressType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "incentives",
                "oracle",
                "red_bank",
                "rewards_collector",
                "params",
                "credit_manager"
              ]
            },
            {
              "description": "Protocol admin is an ICS-27 interchain account controlled by Mars Hub's x/gov module. This account will take the owner and admin roles of red-bank contracts.\n\nOwner means the account who can invoke certain priviliged execute methods on a contract, such as updating the config. Admin means the account who can migrate a contract.",
              "type": "string",
              "enum": [
                "protocol_admin"
              ]
            },
            {
              "description": "The `fee_collector` module account controlled by Mars Hub's x/distribution module. Funds sent to this account will be distributed as staking rewards.\n\nNOTE: This is a Mars Hub address with the `mars` bech32 prefix, which may not be recognized by the `api.addr_validate` method.",
              "type": "string",
              "enum": [
                "fee_collector"
              ]
            },
            {
              "description": "The module account controlled by the by Mars Hub's x/safety module. Funds sent to this account will be deposited into the safety fund.\n\nNOTE: This is a Mars Hub address with the `mars` bech32 prefix, which may not be recognized by the `api.addr_validate` method.",
              "type": "string",
              "enum": [
                "safety_fund"
              ]
            },
            {
              "description": "The swapper contract on the chain",
              "type": "string",
              "enum": [
                "swapper"
              ]
            },
            {
              "description": "Astroport incentives contract",
              "type": "string",
              "enum": [
                "astroport_incentives"
              ]
            }
          ]
        }
      }
    },
    "config": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ConfigResponse",
      "type": "object",
      "required": [
        "prefix"
      ],
      "properties": {
        "owner": {
          "description": "The contract's owner",
          "type": [
            "string",
            "null"
          ]
        },
        "prefix": {
          "description": "The address prefix of the chain this contract is deployed on",
          "type": "string"
        },
        "proposed_new_owner": {
          "description": "The contract's proposed owner",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    }
  }
}

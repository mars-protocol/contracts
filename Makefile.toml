[config]
default_to_workspace = false

[tasks.check]
command = "cargo"
args = ["check"]

[tasks.build]
command = "cargo"
args = ["build", "--release", "--target", "wasm32-unknown-unknown", "--locked"]

[tasks.rust-optimizer]
script = """
if [[ $(arch) == 'arm64' ]]; then
  docker run --rm -v "$(pwd)":/code \
  --mount type=volume,source="$(basename "$(pwd)")_cache",target=/code/target \
  --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
  cosmwasm/workspace-optimizer-arm64:0.12.8
else
  docker run --rm -v "$(pwd)":/code \
  --mount type=volume,source="$(basename "$(pwd)")_cache",target=/code/target \
  --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
  cosmwasm/workspace-optimizer:0.12.8
fi
"""

[tasks.test]
command = "cargo"
args = ["test", "--locked"]

[tasks.fmt]
command = "cargo"
args = ["fmt", "--all", "--check"]

[tasks.clippy]
command = "cargo"
args = ["clippy", "--tests", "--", "-D", "warnings"]

[tasks.all-github-actions]
dependencies = [
    "check",
    "build",
    "test",
    "fmt",
    "clippy",
    "rust-optimizer",
]

[tasks.generate-all-schemas]
script = """
    rm -rf schema
    rm -rf schemas
    mkdir schemas

    array=( mars-address-provider mars-incentives mars-oracle-osmosis mars-red-bank mars-rewards-collector-osmosis)
    for i in "${array[@]}"
    do
      :
      echo "$i"
      cargo run --package "$i" --example schema
      mkdir schemas/"$i"
      mv schema/"$i".json schemas/"$i"/"$i".json
    done

    rm -rf schema
"""

on: push

name: Main

env:
  # Directory with wasm files used by `tests`
  ARTIFACTS_DIR_PATH: 'target/wasm32-unknown-unknown/release'

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.18.0' # required by osmosis-testing

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
          override: true

      - name: Install cargo make
        uses: davidB/rust-cargo-make@v1

      - name: Build for Wasm target
        run: cargo make build

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.18.0' # required by osmosis-testing

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          components: llvm-tools-preview
          override: true

      - name: Install cargo make
        uses: davidB/rust-cargo-make@v1

      - name: Compile workspace
        run: cargo make build

      - name: Run tests
        run: cargo make test

      # FIXME: enable when testing directories work as expected
      #- name: Run test coverage
      #  run: cargo make coverage

      #- name: Upload coverage to Codecov
      #  uses: codecov/codecov-action@v3.1.1
      #  with:
      #    token: ${{ secrets.CODECOV_TOKEN }}
      #    fail_ci_if_error: false
      #    files: target/lcov.info

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.18.0' # required by osmosis-testing

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
          override: true

      - name: Install cargo make
        uses: davidB/rust-cargo-make@v1

      - name: Check formatting
        run: cargo make fmt

      - name: Clippy check
        run: cargo make clippy

{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "oneOf": [
    {
      "description": "Get config",
      "type": "object",
      "required": [
        "config"
      ],
      "properties": {
        "config": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Get asset market",
      "type": "object",
      "required": [
        "market"
      ],
      "properties": {
        "market": {
          "type": "object",
          "required": [
            "denom"
          ],
          "properties": {
            "denom": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Enumerate markets with pagination. Returns Vec<Market>",
      "type": "object",
      "required": [
        "markets"
      ],
      "properties": {
        "markets": {
          "type": "object",
          "properties": {
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "start_after": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Get uncollateralized limit for given asset and user. Returns UncollateralizedLoanLimitResponse",
      "type": "object",
      "required": [
        "uncollateralized_loan_limit"
      ],
      "properties": {
        "uncollateralized_loan_limit": {
          "type": "object",
          "required": [
            "denom",
            "user_address"
          ],
          "properties": {
            "denom": {
              "type": "string"
            },
            "user_address": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Get all debt positions for a user. Returns UsetDebtResponse",
      "type": "object",
      "required": [
        "user_debt"
      ],
      "properties": {
        "user_debt": {
          "type": "object",
          "required": [
            "user_address"
          ],
          "properties": {
            "user_address": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Get user debt position for a specific asset. Returns UserAssetDebtResponse",
      "type": "object",
      "required": [
        "user_asset_debt"
      ],
      "properties": {
        "user_asset_debt": {
          "type": "object",
          "required": [
            "denom",
            "user_address"
          ],
          "properties": {
            "denom": {
              "type": "string"
            },
            "user_address": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Get info about whether or not user is using each asset as collateral. Returns UserCollateralResponse",
      "type": "object",
      "required": [
        "user_collateral"
      ],
      "properties": {
        "user_collateral": {
          "type": "object",
          "required": [
            "user_address"
          ],
          "properties": {
            "user_address": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Get user position. Returns UserPositionResponse",
      "type": "object",
      "required": [
        "user_position"
      ],
      "properties": {
        "user_position": {
          "type": "object",
          "required": [
            "user_address"
          ],
          "properties": {
            "user_address": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Get liquidity scaled amount for a given underlying asset amount (i.e: how much maTokens will get minted if the given amount is deposited)",
      "type": "object",
      "required": [
        "scaled_liquidity_amount"
      ],
      "properties": {
        "scaled_liquidity_amount": {
          "type": "object",
          "required": [
            "amount",
            "denom"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "denom": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Get equivalent scaled debt for a given underlying asset amount. (i.e: how much scaled debt is added if the given amount is borrowed)",
      "type": "object",
      "required": [
        "scaled_debt_amount"
      ],
      "properties": {
        "scaled_debt_amount": {
          "type": "object",
          "required": [
            "amount",
            "denom"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "denom": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Get underlying asset amount for a given maToken balance.",
      "type": "object",
      "required": [
        "underlying_liquidity_amount"
      ],
      "properties": {
        "underlying_liquidity_amount": {
          "type": "object",
          "required": [
            "amount_scaled",
            "ma_token_address"
          ],
          "properties": {
            "amount_scaled": {
              "$ref": "#/definitions/Uint128"
            },
            "ma_token_address": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Get underlying debt amount for a given asset and scaled amounts. (i.e: How much underlying asset needs to be repaid to cancel a given scaled debt amount stored in state)",
      "type": "object",
      "required": [
        "underlying_debt_amount"
      ],
      "properties": {
        "underlying_debt_amount": {
          "type": "object",
          "required": [
            "amount_scaled",
            "denom"
          ],
          "properties": {
            "amount_scaled": {
              "$ref": "#/definitions/Uint128"
            },
            "denom": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}

{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "UserPositionResponse",
  "type": "object",
  "required": [
    "health_status",
    "max_debt_in_base_asset",
    "total_collateral_in_base_asset",
    "total_collateralized_debt_in_base_asset",
    "total_debt_in_base_asset",
    "weighted_liquidation_threshold_in_base_asset"
  ],
  "properties": {
    "health_status": {
      "$ref": "#/definitions/UserHealthStatus"
    },
    "max_debt_in_base_asset": {
      "$ref": "#/definitions/Uint128"
    },
    "total_collateral_in_base_asset": {
      "$ref": "#/definitions/Uint128"
    },
    "total_collateralized_debt_in_base_asset": {
      "description": "Total debt minus the uncollateralized debt",
      "allOf": [
        {
          "$ref": "#/definitions/Uint128"
        }
      ]
    },
    "total_debt_in_base_asset": {
      "$ref": "#/definitions/Uint128"
    },
    "weighted_liquidation_threshold_in_base_asset": {
      "$ref": "#/definitions/Uint128"
    }
  },
  "definitions": {
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "UserHealthStatus": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "not_borrowing"
          ]
        },
        {
          "type": "object",
          "required": [
            "borrowing"
          ],
          "properties": {
            "borrowing": {
              "$ref": "#/definitions/Decimal"
            }
          },
          "additionalProperties": false
        }
      ]
    }
  }
}
